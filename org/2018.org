#+HUGO_BASE_DIR: ../
#+HUGO_SECTION: ./posts
#+OPTIONS: author:nil

* My Life                                                          :@my_life:
** TODO My Review of the Last Jedi                          :movie:star_wars:
:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :date 2018-01-03 :slug my-review-of-the-last-jedi
:END:

*** TODO en
:PROPERTIES:
:EXPORT_TITLE: My Review of the Last Jedi [Spolier Alert]
:EXPORT_FILE_NAME: 2018-01-03-my-review-of-the-last-jedi.en.md
:END:

Sadly, unlike Princess Leia, Carrie Fisher could not come back to life.
This is dedicated to Carrie Fisher.

What I hated:
1. Starting out, Poe feels nothing about his fellows dying. "But we blew up a
   Dreadnaught!?" Also the ridiculous conversation btw Poe and Hux makes it
   really hard to take any of the bad guys seriously, including snoke and hux,
   they are
2. Leia using force: unexpected, but okay. No harm and no gain.
3. Why is Luke so OOO? Why would he doubt his own niece if he sees good in his
   father. I'm okay with this looking just at 7&8, but considering 4-6?
   unacceptable.
4. Where did other jedis following kylo go?
5. The burnt jedi classics were in the falcon at the end, wtf luke and yoda?
6. Luke squeezing milk from giant female Wattos?
7. General snoke been stroke down without much explanation. He can force choke
   ppl light years away but can't tell Kylo is fooling him? He could read kylo's
   mind but couldn't stop Kylo from stabbing him? or I guess that's how rules of
   two work now.
8. Why struggle so badly fighting the guards? No point? cut to the next scene already!
9. Yoda summoning lightning!? Welcome to see a more puppet like yoda but talk
   was too cliche. Yoda's lesson: teach her your failures as well. other parts are bad.
10.Maz WTF!? who is this rando master code breaker wearing some stupid flower in a casino
11.Henikein beer guy as DJ, did he die? No point!? Why was he able to
passthrough the shield!?
12.Not too old this time around to start training?(i guess that's not the point)
13.Kylo long controlled by Snoke, how did he escape? why was he still so unsure
14.Hux was never an appropriate enemy
15.Snoke just appears after all these buildup? Nothing special? Force lightning?
although I guess dooku is guilty of the same stuff but hey at least he fought well.
16.Canto Bight casino was pointless, DJ was pointless. Yes I get they are
mimicking the bar scene from new hope, but it's not there.
17.Structurally, the time line is fucked up. We have three lines of narrative
with two different time lines (Rey's one being stretched much forward) and
syncing back together (unless there is some GR bullshit about the rebel fleet's
time passing slower) etc. Finally they merge into a not so epic fight and another
not so epic fight and then another not so epic fight on Crait (red salt version
of hoth).
18.why the hell deliberately kill off Holdo, just have some droid pilot the
ship. "We've used to lose ppl?" you kept 3po for the longest time for god's sake
19.If they are going the route of killing of the concept of jedi, which makes
sense if they never called snoke sith, just practitioners of dark side, why the
hell reviving the concept in Crait fight scene? Otherwise why mentioning Rey has
such potential in the dark side?
20.owl-penguin toy commercials
21.Rey's parentage doesn't really matter anymore since she is so strong with the
force.
22. Outer rim allies? any followup on this? or is this just another one off
   thing?
23.Luke: yeah, that's pretty much nowhere. Says the farm boy from
Tatooine. "Every word you just said was wrong"
24.Wtf is this spark speech. And wtf Leia slaps Poe. The resistance is fucked
for sure.
25.the red guards doesn't make sense
26.no real development in Rey
27.Luke's story told three times in different fashions!?
28.Kylo stroke luke down and yet can't defeat red ninja guards?
29.Luke's reaction about Han was only one line

What I liked:
1. Rey and Kylo(Ben) connecting. Kylo's transition, his wounds by
   Rey. Confrontation of his feelings. Rey said he is a monster yet begs to luke
   that there is good in him. Rain transfer via force connection.
2. The part where Rey and Kylo fighting for Anakin's lightsaber was pretty good,
   besides we finally get closeups on lightsabers!
3. Luke cloaked himself from using the force? can tell from he not owning his
   light saber anymore
4. little boy telling luke's tales and he seems to be using force to get the
   broom? slave? young force user? ring a bell?
5. Kylo didn't pull the trigger, unlike Han
6. Luke saying laser sword.
7. What Luke really see in Rey was puzzling: dark side of the force? How is this
   reconciled? He walked away seeing Rey lost in anger wielding light saber to
   the rock.
8. Luke taught Rey two lessons, where is the third?
9. Luke never read the jedi classics
10.Rose was a likable character, not counting the transition between losing her
sister and engaging new plan following Poe, who effectively killed her sister in
a suicide mission.
11.Solo's dice chains, although now has strange numbers. the real ones were
picked up by kylo ren
12.Luke winking at 3po
13.Hyperspace strike
14.Admiral Akabar

Notable plots
1. Leia and the underground hole. Explanation: curiosity and desire to know her
   parentage are paths to the dark side? maps directly to Cave of Evil/dark
   force cave.
2. Finn kinda knows it was his fault so he wanted to sacrifice himself for the
   rebels. But what was he doing in the casino!?
3. The scene luke passed away, duel sun setting was exactly the same as a new
   hope.
4. fighting for lightsaber btw Kylo and Rey was great
5. Kylo didn't have his own lightsaber. ? didn't he have his lightsaber on the
   belt? at least it was there when he was waken by Hux
6. "Why did you stop me" "I saved you", okay cmon it's star wars
7. R2 playing the original Leia clip.
8. Maybe hinting so many force usages in the film is to emphasize there will be
   more jedi?
** DONE My Very Own Avatar Icon Thingy                :design:social_network:
:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :date 2018-01-15 :slug my-very-own-avatar-icon-thingy
:END:

*** DONE en
:PROPERTIES:
:EXPORT_TITLE: My Very Own Avatar Icon Thingy
:EXPORT_FILE_NAME: 2018-01-15-my-very-own-avatar-icon-thingy.en.md
:END:

I have been using the symbol for the Old Republic from Star Wars as my goto profile picture for quite sometime. In my attempt to maintain a consistent social network profile over multiple websites, I gradually come to realize that profile picture is the most intuitive way to establish a identity (I guess this is also why services like Gravatar would +be so popular+ exist ). In this case, using a picture from [[http://starwars.wikia.com/wiki/Old_Republic][Wookiepedia]] that everyone has access to is probably not the brightest idea. Thus, I set out to create my very own avatar icon thingy.

Since I don't consider myself to have even the least amount of artistic talent, I started out spending quite some time in GeoGebra trying to reconstruct the Old Republic symbol in a systematic way. Filling up my screen with circles and measurements is fun and surprisingly addicting, yet after several hours, I only ended up with a confusing hodgepodge of curves.

#+CAPTION: One of my failed GeoGebra attempts.
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-01
[[/img/posts/2018/my-very-own-avatar-icon-thingy-01.png]]

It is obvious at that point that I won't be able to recreate anything nearly as complicated as the Old Republic symbol, so I started stripping out a more abstract version of it.

#+CAPTION: My process of streamlining the logo.
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-02
[[/img/posts/2018/my-very-own-avatar-icon-thingy-02.png]]

I isolated out the "rising star" part of the original logo and discarded the wing-shaped portions to center the star. Instead of a rising star, I went for the impression of a shooting star and it turned out extremely well (in my opinion at least). With delight, I settled on the logo design a few minutes later. I kept the dark red color scheme (though I actually used =#700000= instead of the original =#710100= because I hate dangling ones) and added a gray background (=#707070=) as using white seemed too bright for me.

#+CAPTION: Final design as shown on my Twitter profile.
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-03
[[/img/posts/2018/my-very-own-avatar-icon-thingy-03.png]]

I also played around with several alternative color schemes, i.e. inverted versions. Maybe I will use these as icons for other projects. So far, I have updated all my actively used social network profiles and changed the favicon of this blog. Hopefully this icon would be unique enough for others to recognize me across different social networks.

*** DONE zh
:PROPERTIES:
:EXPORT_TITLE: 自己画头像
:EXPORT_FILE_NAME: 2018-01-15-my-very-own-avatar-icon-thingy.zh.md
:END:

我使用星球大战中旧共和国的标志作为头像已经有不短的时间了。不过最近，当我试图统一我所有的“社交网络人格”时，我意识到独特的头像往往是最为直接的在网上认人的方式（这大概就是为何 Gravatar 这类服务 +如此受欢迎+ 会存在）。这么一想，拿 [[http://starwars.wikia.com/wiki/Old_Republic][Wookiepedia]] 上的图片直接作为头像不是什么明智的行为。于是我决定：自己画头像！

由于我并不觉得自己有多少艺术细胞，我最初尝试的方法是在 GeoGebra 里用尺规作图复制原来的头像。这种作图方式很是让人上瘾，但遗憾的是：在荒废几个小时后，我得到的只是一堆纠缠不清的曲线。

#+CAPTION: GeoGebra 中的诸多失败作之一。
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-01
[[/img/posts/2018/my-very-own-avatar-icon-thingy-01.png]]

事已至此，我开始意识到我是画不出像旧共和国标志的那样复杂的头像的，所以我采取了另外一种策略：从这些失败作中抽取一个更加简练的图样。

#+CAPTION: 我逐渐简化头像的过程。
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-02
[[/img/posts/2018/my-very-own-avatar-icon-thingy-02.png]]

我把原图里六芒星升起的部分提取出来，并舍去了碍事的翅膀形部分使得星形能够居中。经过少许修改后更接近流星的图样看起来（至少对我来说）非常赞。在短短几分钟后，我就完成了我的头像设计。我保留了旧头像的暗红的配色（实际用的是 =#700000= 而不是原图的 =710100= ，因为我有个位数字强迫症）并加上了灰色的背景（ =#707070= ，白色背景有点太刺眼了）。

#+CAPTION: 我推特资料上的完成版头像。
#+ATTR_LaTeX: scale=0.75
#+LABEL: fig:my-very-own-avatar-icon-thingy-03
[[/img/posts/2018/my-very-own-avatar-icon-thingy-03.png]]

我还尝试了其他不同的配色，比如反色版本，以后可能会拿来作为我其他项目的图标。我所有还活跃的社交网站都已经换上了新头像，包括网站图标。这下大家应该可以更容易地在不同网站上认出我了XD。

* Site Related                                                :@site_related:
** DONE Trying Out Mastodon              :social_network:mastodon:arch_linux:
:PROPERTIES:
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :date 2018-02-11 :slug trying-out-mastodon
:END:

*** DONE en
:PROPERTIES:
:EXPORT_TITLE: Trying Out Mastodon
:EXPORT_FILE_NAME: 2018-02-11-trying-out-mastodon.en.md
:END:

As mentioned in my [[https://www.shimmy1996.com/en/posts/2017/10/22/no-more-disqusting-disqus/][previous post]], I am not really accustomed to posting on social networks. However, the other day I encountered a term I haven't heard in a long time: micro-blogging. Yes, quite a few social networks, Twitter for instance, is before anything a micro-blogging service. This definition of Twitter makes it immensely more appealing to me: it's a bite-sized blog for random thoughts, funny incidents, and many other pieces of my life that might not fit well with a regular blog post. However, I still find posting on Twitter has the 'broadcasting to the entire Internet' feeling stamped into it. Guess I'll just host my own then.

[[https://github.com/tootsuite/mastodon][Mastodon]] turned out to be one such solution. Mastodon's federated and decentralized nature makes it ideal for someone like me who struggles between building my online identity while minimizing the number of different companies I expose my information to. If people are willing to give away their personal information for fancy profile pictures, then hosting a Mastodon wouldn't seem like such a bad deal.

**** Installation on Arch Linux
It was kinda surprising that there doesn't exist a Arch Linux specific installation guide for Mastodon. Not that the installation process would be more difficult on Arch Linux than Ubuntu, but installation can be made a lot due simpler to the abundance of packages. Since the [[https://github.com/tootsuite/documentation/blob/master/Running-Mastodon/Production-guide.md][official production guide]] is already fairly comprehensive, I'll just document some Arch Linux specific steps here.

***** Dependencies
Here's a table detailing all the dependencies and their corresponding packages in Arch Linux. There really is no need to git clone anything. =npm= was also required in the installation process, but was not listed in the official guide.

| Dependency                            | Package                                                                                       |
| =node.js= 6.x                         | [[https://www.archlinux.org/packages/community/x86_64/nodejs-lts-boron/][=nodejs-lts-boron=]] |
| =yarn=                                | [[https://www.archlinux.org/packages/community/any/yarn/][=yarn=]]                            |
| =imagemagick=                         | [[https://www.archlinux.org/packages/extra/x86_64/imagemagick/][=imagemagick=]]               |
| =ffmpeg=                              | [[https://www.archlinux.org/packages/extra/x86_64/ffmpeg/][=ffmpeg=]]                         |
| =libprotobuf= and =protobuf-compiler= | [[https://www.archlinux.org/packages/?sort=&q=protobuf&maintainer=&flagged=][=protobuf=]]     |
| =nginx=                               | [[https://www.archlinux.org/packages/extra/x86_64/nginx/][=nginx=]]                           |
| =redis=                               | [[https://www.archlinux.org/packages/community/x86_64/redis/][=redis=]]                       |
| =postgresql=                          | [[https://www.archlinux.org/packages/extra/x86_64/postgresql/][=postgresql=]]                 |
| =nodejs=                              | [[https://www.archlinux.org/packages/community/x86_64/nodejs/][=nodejs=]]                     |
| =rbenv=                               | [[https://aur.archlinux.org/packages/rbenv/][=rbenv=]]                                        |
| =ruby-build=                          | [[https://aur.archlinux.org/packages/ruby-build/][=ruby-build=]]                              |
| =npm=                                 | [[https://www.archlinux.org/packages/community/any/npm/][=npm=]]                              |

For =rbenv=, I needed to add ='eval "$(rbenv init -)"= to =.bashrc= or =.zshrc= after installation as prompted by the post installation script.

***** Mastodon
Create user =mastodon= and to =sudoers= using =visudo=.
#+BEGIN_SRC sh
  useradd -m -G wheel -s /bin/bash mastodon
#+END_SRC

Then I can clone the repository and start [[https://github.com/tootsuite/documentation/blob/master/Running-Mastodon/Production-guide.md#nodejs-and-ruby-dependencies][installing node.js and ruby dependencies]]. This is where =npm= is required. Besides, I encountered a =ENONT= error when running =yarn= saying =./.config/yarn/global/.yarnclean= is missing, which is resolved by creating the file.

***** PostgreSQL
In addition to installing the =postgresql= package, I followed [[https://wiki.archlinux.org/index.php/PostgreSQL][Arch Wiki]] to initialize the data cluster:

#+BEGIN_SRC sh
  $ sudo su postgres
  [postgres]$ initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data'
#+END_SRC

After starting and enabling =postgresql= with =systemctl=, I can then start the =psql= shell as the =postgres= user and create user for Mastodon (use =psql= command =\du= to check the user is actually there):

#+BEGIN_SRC sh
  $ sudo su postgres
  [postgres]$ psql
  [psql]# CREATE USER mastodon CREATEDB;
  [psql]# \q
#+END_SRC

Port selection is customizable in =postgresql.service= and the port number will be used in =.env.porduction= customization.

***** Redis
Pretty much the same drill as =postgresql=, I installed =redis= and start/enabled =redis.service=. The port selection and address that have access can all be configured from =/etc/redis.conf=.

***** Nginx & Let's Encrypt
The official production guide covers this part pretty well already.

***** =.env.production=
The config file is fairly self-explanatory. The only thing I got wrong the first time is the variable =DB_HOST= for =postgresql=. I then obtained the correct path, =/run/postgresql=, by checking status of =postgresql.service=.

***** Scheduling Services & Cleanups
Again, just follow the official production guide. I installed [[https://www.archlinux.org/packages/core/x86_64/cronie/][=cronie=]] to schedule cron jobs.

**** My Experience
The web interface is fairly good, I like how I can write toots while browsing timelines instead of been forced to stay at the top of the page. I tried out quite a few Mastodon clients on my phone and I settled on [[https://pawoo.net/about][Pawoo]], which is built by Pixiv. So far Mastodon feels like a more comfy twitter to me and a platform where I am actually willing to write on. I'm pushing myself to write something on Mastodon every few days. So far it's been mostly running logs, but I'll come up more stuff to post in the future.

One thing I would really like to see though is multilingual post support in Mastodon. A workaround I currently use is appending different tags for Chinese vs. English posts, which not only bloats my toots, but also fragmented my timeline so that it's only 50% comprehensible for most people. Regrettably, it seems that out of the various micro-blogging/social networking services, only [[https://code.facebook.com/posts/597373993776783][Facebook]] has something similar to this at the moment.

In the footer section, I've replaced Twitter with [[https://mstdn.shimmy1996.com/@shimmy1996][my Mastodon profile]]. Feel free to take a peek inside. :P

*** DONE zh
:PROPERTIES:
:EXPORT_TITLE: Mastodon 尝鲜
:EXPORT_FILE_NAME: 2018-02-11-trying-out-mastodon.zh.md
:END:

我在 [[https://www.shimmy1996.com/zh/posts/2017/10/22/no-more-disqusting-disqus/][上一篇日志]] 里提到过，我并不习惯于在社交网络上发帖子。不过不久之前，我偶然撞见了一个很久没有听到过的词：微型博客。不少社交网络站点，例如 Twitter ，本质上还是一个微型博客服务。这种定义下的 Twitter 对我更加具有吸引力：我可以把一些随想，趣事和生活中其他不大适合写进博客的点点滴滴塞进去。但即使如此，我还是发推有一种“向整个互联网发送座标”的感觉。嗯，那么只好自己搭建一个微型博客了。

[[https://github.com/tootsuite/mastodon][Mastodon]] 就是一个很好的解决方案。对与在最大化网络人格和最小化个人信息泄露之间进退两难的我来说，存储去中心化、但实例之间又紧密相联的 Mastodon 非常理想。如果人们愿意为了好看的头像将个人信息拱手送出的话，搭建一个 Mastodon 实例可以算得上是一个划算的多的买卖。

**** 在 Arch Linux 上安装 Mastodon
我在一番搜寻后，居然没有找到一篇专门针对 Arch Linux 的 Mastodon 安装指南，这有点让我惊讶。不过得益于丰富的软件包，在 Arch Linux 上安装 Mastodon 其实比在 Ubuntu 上更加简单。 [[https://github.com/tootsuite/documentation/blob/master/Running-Mastodon/Production-guide.md][官方指南]] 上有很详尽的步骤说明，我就简单补充一些只适用于 Arch Linux 的部分。

***** 软件包依赖
我把所有依赖以及相对应的 Arch Linux 软件包都列了出来。完全没有手动克隆 git 仓库的必要。 =npm= 会在安装过程中用到，但没有在官方指南中列出。

| 依赖                                  | 软件包                                                                                        |
| =node.js= 6.x                         | [[https://www.archlinux.org/packages/community/x86_64/nodejs-lts-boron/][=nodejs-lts-boron=]] |
| =yarn=                                | [[https://www.archlinux.org/packages/community/any/yarn/][=yarn=]]                            |
| =imagemagick=                         | [[https://www.archlinux.org/packages/extra/x86_64/imagemagick/][=imagemagick=]]               |
| =ffmpeg=                              | [[https://www.archlinux.org/packages/extra/x86_64/ffmpeg/][=ffmpeg=]]                         |
| =libprotobuf= 和 =protobuf-compiler= | [[https://www.archlinux.org/packages/?sort=&q=protobuf&maintainer=&flagged=][=protobuf=]]     |
| =nginx=                               | [[https://www.archlinux.org/packages/extra/x86_64/nginx/][=nginx=]]                           |
| =redis=                               | [[https://www.archlinux.org/packages/community/x86_64/redis/][=redis=]]                       |
| =postgresql=                          | [[https://www.archlinux.org/packages/extra/x86_64/postgresql/][=postgresql=]]                 |
| =nodejs=                              | [[https://www.archlinux.org/packages/community/x86_64/nodejs/][=nodejs=]]                     |
| =rbenv=                               | [[https://aur.archlinux.org/packages/rbenv/][=rbenv=]]                                        |
| =ruby-build=                          | [[https://aur.archlinux.org/packages/ruby-build/][=ruby-build=]]                              |
| =npm=                                 | [[https://www.archlinux.org/packages/community/any/npm/][=npm=]]                              |

在安装 =rbenv= 后，我需要把 ='eval "$(rbenv init -)"= 加入 =.bashrc= 或 =.zshrc= 中（安装脚本也会提示这一步骤）。

***** Mastodon
创建用户 =mastodon= 并用 =visudo= 把该用户加入 =sudoers= 。
#+BEGIN_SRC sh
  useradd -m -G wheel -s /bin/bash mastodon
#+END_SRC

接下来就可以克隆 Mastodon 的 git 仓库并开始 [[https://github.com/tootsuite/documentation/blob/master/Running-Mastodon/Production-guide.md#nodejs-and-ruby-dependencies][安装 node.js 和 ruby 的依赖]] 了。在这一过程中会用到 =npm= 。我在运行 =yarn= 时，遇到了一个 =ENONT= 错误：无法找到 =./.config/yarn/global/.yarnclean= 。手动创建了迷失的文件解决了这个错误。

***** PostgreSQL
除了安装 =postgresql= 软件包外, 我遵循 [[https://wiki.archlinux.org/index.php/PostgreSQL][Arch Wiki]] 里的步骤初始化了数据库集群：

#+BEGIN_SRC sh
  $ sudo su postgres
  [postgres]$ initdb --locale $LANG -E UTF8 -D '/var/lib/postgres/data'
#+END_SRC

在开始并启用 =postgresql.service= 后，我就可以以用户 =postgres= 的身份登录 =psql= 命令行并给 Mastodon 建立用户了（可以使用 =psql= 命令 =\du= 来确认用户列表）：

#+BEGIN_SRC sh
  $ sudo su postgres
  [postgres]$ psql
  [psql]# CREATE USER mastodon CREATEDB;
  [psql]# \q
#+END_SRC

端口设置可以在 =postgresql.service= 里找到，这会在编辑 =.env.porduction= 时用到。

***** Redis
和 =postgresql= 差不多，我安装了 =redis= ，开始／启用了 =redis.service= 。端口选择和允许连接的地址都可以在 =/etc/redis.conf= 里设置。

***** Nginx 和 Let's Encrypt
官方指南已经提供了很详尽的步骤，这里不再赘述。

***** =.env.production=
照配置文件里的说明做就可以了。我唯一弄错的地方是连接 =postgresql= 所需的 =DB_HOST= 。在查看 =postgresql.service= 的状态后，我找到了正确的路径， =/run/postgresql= 。

***** 计划进程和缓存清理
照官方指南做就好。我安装了 [[https://www.archlinux.org/packages/core/x86_64/cronie/][=cronie=]] 来安排 cron 作业。

**** 使用感受
网页版界面很不错，我很喜欢可以一边刷时间线一边慢慢写嘟文这一点（而不是在被迫停留在页面顶端）。我在尝试了数个 Mastodon 手机客户端后选定了 Pixiv 开发的 [[https://pawoo.net/about][Pawoo]] 。到目前为止， Mastodon 给我的感觉是一个比 Twitter 更加舒适、更能激发我写东西的平台。我试着推动自己每隔几天就写一条嘟文。虽然目前为止我写的大都是跑步的记录，但我会渐渐丰富我的嘟文内容的。

我很希望看到 Mastodon 对多语言嘟文提供支持。目前我用的办法是给中文和英文的嘟文打上不同的标签，但这么做不仅使嘟文更加臃肿，也使得我的时间线对大部分人来说可读性只有 50% 。可惜的是，目前的诸多社交网络里只看到 [[https://code.facebook.com/posts/597373993776783][Facebook]] 对此提供了支持。

在网站页脚，我已经把 Twitter 换成了我的[[https://mstdn.shimmy1996.com/@shimmy1996][Mastodon 页面]] ，随时欢迎各位来访。

* Footnotes
* COMMENT Local Variables                                           :ARCHIVE:

# Local Variables:
# fill-column: 80
# eval: (auto-fill-mode nil)
# eval: (add-hook 'after-save-hook #'org-hugo-export-subtree-to-md-after-save :append :local)
# End:
